[
  {
    "title": "  7 Segment Display",
    "blocks": [
      {
        "type": "text",
        "content": "A seven segment display is a simple electronic display device that can show digits (and some letters) using 7 individual segments. This project demonstrates how to control a seven segment display with an Arduino to display numbers. It's great for digital clocks, counters, and basic numerical displays. Depending on whether you have a common cathode or common anode display, the wiring and code will slightly differ."
      },
      {
        "type": "header",
        "content": "Requirements"
      },
      {
        "type": "text",
        "content": "- Seven segment display (common cathode or common anode)"
      },
      {
        "type": "text",
        "content": "- Arduino board (UNO, Nano, etc.)"
      },
      {
        "type": "text",
        "content": "- 7 current-limiting resistors (typically 220Ω or 330Ω, one for each segment)"
      },
      {
        "type": "text",
        "content": "- Breadboard"
      },
      {
        "type": "text",
        "content": "- Jumper wires"
      },
      {
        "type": "header",
        "content": "Setup"
      },
      {
        "type": "text",
        "content": "For a common cathode seven segment display, connect the common cathode pin to GND. Then, connect each of the seven segment pins (labeled a through g) through a resistor to individual digital output pins on the Arduino (for example, pins 2-8). Adjust the wiring if you're using a common anode display (common pin to 5V, and the segment pins are driven LOW to light up)."
      },
      {
        "type": "header",
        "content": "Code and Explanation"
      },
      {
        "type": "text",
        "content": "The following Arduino sketch uses an array to map out the segments for displaying digits 0 through 9 on a common cathode seven segment display. Each segment is connected to a digital pin, and the code cycles through the digits with a one-second delay between each."
      },
      {
        "type": "code",
        "code": [
          "// Define pins for each segment of the 7-segment display",
          "const int a = 2;",
          "const int b = 3;",
          "const int c = 4;",
          "const int d = 5;",
          "const int e = 6;",
          "const int f = 7;",
          "const int g = 8;",
          "",
          "// Array to hold segment pins",
          "int segments[7] = {a, b, c, d, e, f, g};",
          "",
          "// Digit patterns for common cathode display (1 = ON, 0 = OFF)",
          "int digits[10][7] = {",
          "  {1, 1, 1, 1, 1, 1, 0},  // 0",
          "  {0, 1, 1, 0, 0, 0, 0},  // 1",
          "  {1, 1, 0, 1, 1, 0, 1},  // 2",
          "  {1, 1, 1, 1, 0, 0, 1},  // 3",
          "  {0, 1, 1, 0, 0, 1, 1},  // 4",
          "  {1, 0, 1, 1, 0, 1, 1},  // 5",
          "  {1, 0, 1, 1, 1, 1, 1},  // 6",
          "  {1, 1, 1, 0, 0, 0, 0},  // 7",
          "  {1, 1, 1, 1, 1, 1, 1},  // 8",
          "  {1, 1, 1, 1, 0, 1, 1}   // 9",
          "};",
          "",
          "void setup() {",
          "  // Set all segment pins as outputs",
          "  for (int i = 0; i < 7; i++) {",
          "    pinMode(segments[i], OUTPUT);",
          "  }",
          "}",
          "",
          "void loop() {",
          "  // Cycle through digits 0 to 9",
          "  for (int num = 0; num < 10; num++) {",
          "    displayDigit(num);",
          "    delay(1000);",
          "  }",
          "}",
          "",
          "void displayDigit(int num) {",
          "  for (int i = 0; i < 7; i++) {",
          "    digitalWrite(segments[i], digits[num][i]);",
          "  }",
          "}"
        ],
        "language": "c++"
      },
      {
        "type": "text",
        "content": "This code defines the segment connections and digit patterns for a common cathode display. Adjust the patterns if you are using a common anode display (invert the HIGH/LOW logic)."
      }
    ],
    "videoId": "M7lc1UVf-VE"
  }
]
